<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bm.dao.TDisciplineMapper">
  <resultMap id="BaseResultMap" type="com.bm.model.TDiscipline">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="discipline_name" jdbcType="VARCHAR" property="disciplineName" />
    <result column="discipline_id" jdbcType="INTEGER" property="disciplineId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, discipline_name, discipline_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_discipline
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_discipline
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bm.model.TDiscipline">
    insert into t_discipline (id, discipline_name, discipline_id
      )
    values (
    #{id,jdbcType=INTEGER}, #{disciplineName,jdbcType=VARCHAR}, #{disciplineId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bm.model.TDiscipline">
    insert into t_discipline
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="disciplineName != null">
        discipline_name,
      </if>
      <if test="disciplineId != null">
        discipline_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="disciplineName != null">
        #{disciplineName,jdbcType=INTEGER},
      </if>
      <if test="disciplineId != null">
        #{disciplineId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="findDisciplines" resultMap="BaseResultMap">
    select * from t_discipline
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.bm.model.TDiscipline">
    update t_discipline
    <set>
      <if test="disciplineName != null">
        discipline_name = #{disciplineName,jdbcType=INTEGER},
      </if>
      <if test="disciplineId != null">
        discipline_id = #{disciplineId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bm.model.TDiscipline">
    update t_discipline
    set discipline_name = #{disciplineName,jdbcType=INTEGER},
      discipline_id = #{disciplineId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>