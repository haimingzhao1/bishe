<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bm.dao.TStudentMapper">
  <resultMap id="BaseResultMap" type="com.bm.model.TStudent">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stu_number" jdbcType="VARCHAR" property="stuNumber" />
    <result column="stu_name" jdbcType="VARCHAR" property="stuName" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="stu_phone" jdbcType="VARCHAR" property="stuPhone" />
    <result column="discipline_id" jdbcType="INTEGER" property="disciplineId" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="is_vip" jdbcType="INTEGER" property="isVip" />
  </resultMap>
  <resultMap id="BaseResultMap1" type="com.bm.model.TStudentDomain">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stu_number" jdbcType="VARCHAR" property="stuNumber" />
    <result column="stu_name" jdbcType="VARCHAR" property="stuName" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="stu_phone" jdbcType="VARCHAR" property="stuPhone" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="is_vip" jdbcType="INTEGER" property="isVip" />
    <association property="discipline" select="com.bm.dao.TDisciplineMapper.selectByPrimaryKey" column="discipline_id"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, stu_number, stu_name, gender, stu_phone, discipline_id, count, is_vip
  </sql>
  <select id="selectByExample" parameterType="com.bm.model.TStudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bm.model.TStudentExample">
    delete from t_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bm.model.TStudent">
    insert into t_student (id, stu_number, stu_name, 
      gender, stu_phone, discipline_id, 
      count, is_vip)
    values (#{id,jdbcType=INTEGER}, #{stuNumber,jdbcType=VARCHAR}, #{stuName,jdbcType=VARCHAR}, 
      #{gender,jdbcType=INTEGER}, #{stuPhone,jdbcType=VARCHAR}, #{disciplineId,jdbcType=INTEGER}, 
      #{count,jdbcType=INTEGER}, #{isVip,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bm.model.TStudent">
    insert into t_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stuNumber != null">
        stu_number,
      </if>
      <if test="stuName != null">
        stu_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="stuPhone != null">
        stu_phone,
      </if>
      <if test="disciplineId != null">
        discipline_id,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="isVip != null">
        is_vip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stuNumber != null">
        #{stuNumber,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null">
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="stuPhone != null">
        #{stuPhone,jdbcType=VARCHAR},
      </if>
      <if test="disciplineId != null">
        #{disciplineId,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="isVip != null">
        #{isVip,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bm.model.TStudentExample" resultType="java.lang.Long">
    select count(*) from t_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="findByStuNumber" resultType="com.bm.model.TStudent">
    select * from t_student where stu_number = #{stuNum}
  </select>
    <select id="findAllStus" resultMap="BaseResultMap1">
      select * from t_student
    </select>
  <select id="findStudentDomainById" resultMap="BaseResultMap1">
    select * from t_student where id = #{id}
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stuNumber != null">
        stu_number = #{record.stuNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.stuName != null">
        stu_name = #{record.stuName,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.stuPhone != null">
        stu_phone = #{record.stuPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.disciplineId != null">
        discipline_id = #{record.disciplineId,jdbcType=INTEGER},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.isVip != null">
        is_vip = #{record.isVip,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_student
    set id = #{record.id,jdbcType=INTEGER},
      stu_number = #{record.stuNumber,jdbcType=VARCHAR},
      stu_name = #{record.stuName,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      stu_phone = #{record.stuPhone,jdbcType=VARCHAR},
      discipline_id = #{record.disciplineId,jdbcType=INTEGER},
      count = #{record.count,jdbcType=INTEGER},
      is_vip = #{record.isVip,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bm.model.TStudent">
    update t_student
    <set>
      <if test="stuNumber != null">
        stu_number = #{stuNumber,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null">
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="stuPhone != null">
        stu_phone = #{stuPhone,jdbcType=VARCHAR},
      </if>
      <if test="disciplineId != null">
        discipline_id = #{disciplineId,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="isVip != null">
        is_vip = #{isVip,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bm.model.TStudent">
    update t_student
    set stu_number = #{stuNumber,jdbcType=VARCHAR},
      stu_name = #{stuName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      stu_phone = #{stuPhone,jdbcType=VARCHAR},
      discipline_id = #{disciplineId,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER},
      is_vip = #{isVip,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>