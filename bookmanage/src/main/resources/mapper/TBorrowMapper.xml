<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bm.dao.TBorrowMapper">
  <resultMap id="BaseResultMap" type="com.bm.model.TBorrow">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="borrow_date" jdbcType="VARCHAR" property="borrowDate" />
    <result column="also_date" jdbcType="VARCHAR" property="alsoDate" />
    <result column="is_also" jdbcType="INTEGER" property="isAlso" />
    <result column="is_continue" jdbcType="INTEGER" property="isContinue" />
  </resultMap>
  <resultMap id="BaseResultMap1" type="com.bm.model.TBorrowDomain">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="borrow_date" jdbcType="VARCHAR" property="borrowDate" />
    <result column="also_date" jdbcType="VARCHAR" property="alsoDate" />
    <result column="is_also" jdbcType="INTEGER" property="isAlso" />
    <result column="is_continue" jdbcType="INTEGER" property="isContinue" />
    <association property="user" select="com.bm.dao.TUserMapper.selectByPrimaryKey" column="user_id"/>
    <association property="book" select="com.bm.dao.TBookMapper.selectByPrimaryKey" column="book_id"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, book_id, borrow_date, also_date, is_also, is_continue
  </sql>
  <select id="selectByExample" parameterType="com.bm.model.TBorrowExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_borrow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_borrow
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_borrow
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bm.model.TBorrowExample">
    delete from t_borrow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bm.model.TBorrow">
    insert into t_borrow (id, user_id, book_id, 
      borrow_date, also_date, is_also, 
      is_continue)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, 
      #{borrowDate,jdbcType=VARCHAR}, #{alsoDate,jdbcType=VARCHAR}, #{isAlso,jdbcType=INTEGER}, 
      #{isContinue,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bm.model.TBorrow">
    insert into t_borrow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="borrowDate != null">
        borrow_date,
      </if>
      <if test="alsoDate != null">
        also_date,
      </if>
      <if test="isAlso != null">
        is_also,
      </if>
      <if test="isContinue != null">
        is_continue,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="borrowDate != null">
        #{borrowDate,jdbcType=VARCHAR},
      </if>
      <if test="alsoDate != null">
        #{alsoDate,jdbcType=VARCHAR},
      </if>
      <if test="isAlso != null">
        #{isAlso,jdbcType=INTEGER},
      </if>
      <if test="isContinue != null">
        #{isContinue,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bm.model.TBorrowExample" resultType="java.lang.Long">
    select count(*) from t_borrow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <select id="findBorrowByUserId" resultMap="BaseResultMap1">
      select * from t_borrow where user_id = #{userid}
    </select>
  <select id="findAllBorrws" resultMap="BaseResultMap1">
    select * from t_borrow
  </select>
  <select id="findBorrowsByBookId" resultMap="BaseResultMap1">
    select * from t_borrow where book_id = #{bookid}
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_borrow
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.borrowDate != null">
        borrow_date = #{record.borrowDate,jdbcType=VARCHAR},
      </if>
      <if test="record.alsoDate != null">
        also_date = #{record.alsoDate,jdbcType=VARCHAR},
      </if>
      <if test="record.isAlso != null">
        is_also = #{record.isAlso,jdbcType=INTEGER},
      </if>
      <if test="record.isContinue != null">
        is_continue = #{record.isContinue,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_borrow
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      book_id = #{record.bookId,jdbcType=INTEGER},
      borrow_date = #{record.borrowDate,jdbcType=VARCHAR},
      also_date = #{record.alsoDate,jdbcType=VARCHAR},
      is_also = #{record.isAlso,jdbcType=INTEGER},
      is_continue = #{record.isContinue,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bm.model.TBorrow">
    update t_borrow
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="borrowDate != null">
        borrow_date = #{borrowDate,jdbcType=VARCHAR},
      </if>
      <if test="alsoDate != null">
        also_date = #{alsoDate,jdbcType=VARCHAR},
      </if>
      <if test="isAlso != null">
        is_also = #{isAlso,jdbcType=INTEGER},
      </if>
      <if test="isContinue != null">
        is_continue = #{isContinue,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bm.model.TBorrow">
    update t_borrow
    set user_id = #{userId,jdbcType=INTEGER},
      book_id = #{bookId,jdbcType=INTEGER},
      borrow_date = #{borrowDate,jdbcType=VARCHAR},
      also_date = #{alsoDate,jdbcType=VARCHAR},
      is_also = #{isAlso,jdbcType=INTEGER},
      is_continue = #{isContinue,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>