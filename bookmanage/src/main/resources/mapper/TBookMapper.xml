<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bm.dao.TBookMapper">
  <resultMap id="BaseResultMap" type="com.bm.model.BookDomain">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="book_number" jdbcType="VARCHAR" property="bookNumber" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="book_author" jdbcType="VARCHAR" property="bookAuthor" />
    <result column="book_press" jdbcType="VARCHAR" property="bookPress" />
    <result column="book_createtime" jdbcType="VARCHAR" property="bookCreatetime" />
    <result column="book_summary" jdbcType="VARCHAR" property="bookSummary" />
    <result column="book_remark" jdbcType="VARCHAR" property="bookRemark" />
    <result column="ebook" jdbcType="VARCHAR" property="ebook" />
    <association property="sort" select="com.bm.dao.BSortMapper.selectByPrimaryKey" column="sort_id"></association>
  </resultMap>
    <resultMap id="BaseResultMap1" type="com.bm.model.TBook">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="book_number" jdbcType="VARCHAR" property="bookNumber" />
      <result column="book_name" jdbcType="VARCHAR" property="bookName" />
      <result column="book_author" jdbcType="VARCHAR" property="bookAuthor" />
      <result column="book_press" jdbcType="VARCHAR" property="bookPress" />
      <result column="book_createtime" jdbcType="VARCHAR" property="bookCreatetime" />
      <result column="book_summary" jdbcType="VARCHAR" property="bookSummary" />
      <result column="book_remark" jdbcType="VARCHAR" property="bookRemark" />
      <result column="ebook" jdbcType="VARCHAR" property="ebook" />
      <result column="sort_id" jdbcType="INTEGER" property="sortId"/>
    </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, book_number, book_name, book_author, "book_ press", book_createtime, "book_ summary", 
    book_remark, ebook, sort_id
  </sql>
  <select id="selectByExample" parameterType="com.bm.model.TBookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap1">
    select 
    <include refid="Base_Column_List" />
    from t_book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bm.model.TBookExample">
    delete from t_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bm.model.TBook">
    insert into t_book (id, book_number, book_name, 
      book_author, book_press, book_createtime,
      book_summary, book_remark, ebook,
      sort_id)
    values (#{id,jdbcType=INTEGER}, #{bookNumber,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, 
      #{bookAuthor,jdbcType=VARCHAR}, #{bookPress,jdbcType=VARCHAR}, #{bookCreatetime,jdbcType=VARCHAR}, 
      #{bookSummary,jdbcType=VARCHAR}, #{bookRemark,jdbcType=VARCHAR}, #{ebook,jdbcType=VARCHAR}, 
      #{sortId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bm.model.TBook">
    insert into t_book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookNumber != null">
        book_number,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="bookAuthor != null">
        book_author,
      </if>
      <if test="bookPress != null">
        "book_ press",
      </if>
      <if test="bookCreatetime != null">
        book_createtime,
      </if>
      <if test="bookSummary != null">
        "book_ summary",
      </if>
      <if test="bookRemark != null">
        book_remark,
      </if>
      <if test="ebook != null">
        ebook,
      </if>
      <if test="sortId != null">
        sort_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bookNumber != null">
        #{bookNumber,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookAuthor != null">
        #{bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookPress != null">
        #{bookPress,jdbcType=VARCHAR},
      </if>
      <if test="bookCreatetime != null">
        #{bookCreatetime,jdbcType=VARCHAR},
      </if>
      <if test="bookSummary != null">
        #{bookSummary,jdbcType=VARCHAR},
      </if>
      <if test="bookRemark != null">
        #{bookRemark,jdbcType=VARCHAR},
      </if>
      <if test="ebook != null">
        #{ebook,jdbcType=VARCHAR},
      </if>
      <if test="sortId != null">
        #{sortId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bm.model.TBookExample" resultType="java.lang.Long">
    select count(*) from t_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="queryBook" resultMap="BaseResultMap">
    select * from t_book where
    <if test="booknum != null">
      book_number like #{booknum}
    </if>
    <if test="bookname != null">
      book_name like #{bookname}
    </if>
  </select>
  <select id="findBookById" resultMap="BaseResultMap">
    select * from t_book where id = #{bookid}
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_book
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bookNumber != null">
        book_number = #{record.bookNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.bookName != null">
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookAuthor != null">
        book_author = #{record.bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="record.bookPress != null">
        "book_ press" = #{record.bookPress,jdbcType=VARCHAR},
      </if>
      <if test="record.bookCreatetime != null">
        book_createtime = #{record.bookCreatetime,jdbcType=VARCHAR},
      </if>
      <if test="record.bookSummary != null">
        "book_ summary" = #{record.bookSummary,jdbcType=VARCHAR},
      </if>
      <if test="record.bookRemark != null">
        book_remark = #{record.bookRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.ebook != null">
        ebook = #{record.ebook,jdbcType=VARCHAR},
      </if>
      <if test="record.sortId != null">
        sort_id = #{record.sortId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_book
    set id = #{record.id,jdbcType=INTEGER},
      book_number = #{record.bookNumber,jdbcType=VARCHAR},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      book_author = #{record.bookAuthor,jdbcType=VARCHAR},
      book_press = #{record.bookPress,jdbcType=VARCHAR},
      book_createtime = #{record.bookCreatetime,jdbcType=VARCHAR},
      book_summary = #{record.bookSummary,jdbcType=VARCHAR},
      book_remark = #{record.bookRemark,jdbcType=VARCHAR},
      ebook = #{record.ebook,jdbcType=VARCHAR},
      sort_id = #{record.sortId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bm.model.TBook">
    update t_book
    <set>
      <if test="bookNumber != null">
        book_number = #{bookNumber,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookAuthor != null">
        book_author = #{bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookPress != null">
        "book_ press" = #{bookPress,jdbcType=VARCHAR},
      </if>
      <if test="bookCreatetime != null">
        book_createtime = #{bookCreatetime,jdbcType=VARCHAR},
      </if>
      <if test="bookSummary != null">
        "book_ summary" = #{bookSummary,jdbcType=VARCHAR},
      </if>
      <if test="bookRemark != null">
        book_remark = #{bookRemark,jdbcType=VARCHAR},
      </if>
      <if test="ebook != null">
        ebook = #{ebook,jdbcType=VARCHAR},
      </if>
      <if test="sortId != null">
        sort_id = #{sortId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bm.model.TBook">
    update t_book
    set book_number = #{bookNumber,jdbcType=VARCHAR},
      book_name = #{bookName,jdbcType=VARCHAR},
      book_author = #{bookAuthor,jdbcType=VARCHAR},
      book_press = #{bookPress,jdbcType=VARCHAR},
      book_createtime = #{bookCreatetime,jdbcType=VARCHAR},
      book_summary = #{bookSummary,jdbcType=VARCHAR},
      book_remark = #{bookRemark,jdbcType=VARCHAR},
      ebook = #{ebook,jdbcType=VARCHAR},
      sort_id = #{sortId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>